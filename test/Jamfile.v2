# Boost.Signals2 Library

# Copyright Douglas Gregor 2001-2003.
# Copyright Frank Mori Hess 2009.
# Use, modification and
# distribution is subject to the Boost Software License, Version
# 1.0. (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

# For more information, see http://www.boost.org

# bring in rules for testing
import testing ;

project
    : source-location .
    : requirements
        <hardcode-dll-paths>true
        <library>/boost/test//boost_unit_test_framework
        <link>static
    ;

rule thread-run ( sources )
{
    return
    [ run $(sources) : : : <library>/boost/thread//boost_thread/
        <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
        <threading>multi : : <preserve-target-tests>off ]
    ;
}

{
  test-suite signals2
    :
  [ run connection_test.cpp : : : : : <preserve-target-tests>off ]
  [ run dead_slot_test.cpp : : : : : <preserve-target-tests>off ]
  [ run deconstruct_test.cpp : : : : : <preserve-target-tests>off ]
  [ run deletion_test.cpp
    :
    :
    : <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
    :
    : <preserve-target-tests>off
  ]
  [ thread-run mutex_test.cpp ]
  [ run ordering_test.cpp
    :
    :
    : <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
    :
    : <preserve-target-tests>off
  ]
  [ run regression_test.cpp
    :
    :
    : <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
    :
    : <preserve-target-tests>off
  ]
  [ run shared_connection_block_test.cpp
    :
    :
    :
    :
    : <preserve-target-tests>off
  ]
  [ run signal_n_test.cpp
    :
    :
    : <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
    :
    : <preserve-target-tests>off
  ]
  [ run signal_test.cpp
    :
    :
    : <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
    :
    : <preserve-target-tests>off
  ]
  [ run signal_type_test.cpp
    :
    :
    : <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
    :
    : <preserve-target-tests>off
  ]
  [ run slot_compile_test.cpp : : : : : <preserve-target-tests>off ]
  [ thread-run threading_models_test.cpp ]
  [ run trackable_test.cpp : : : : : <preserve-target-tests>off ]
  [ run track_test.cpp
    :
    :
    : <define>BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY=0
    :
    : <preserve-target-tests>off
  ]
 ;
}
